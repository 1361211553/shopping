<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shopping.dao.SAddressMapper" >
  <resultMap id="BaseResultMap" type="com.shopping.entity.SAddress" >
    <id column="addressid" property="addressid" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="consignee" property="consignee" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="addressphone" property="addressphone" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="zip" property="zip" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="dist" property="dist" jdbcType="VARCHAR" />
    <result column="detailed" property="detailed" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    addressid, userid, consignee, province, addressphone, status, zip, city, dist, detailed
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shopping.entity.SAddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from s_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from s_address
    where addressid = #{addressid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from s_address
    where addressid = #{addressid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shopping.entity.SAddress" >
    insert into s_address (addressid, userid, consignee, 
      province, addressphone, status, 
      zip, city, dist, detailed
      )
    values (#{addressid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{consignee,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{addressphone,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{zip,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{dist,jdbcType=VARCHAR}, #{detailed,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shopping.entity.SAddress" >
    insert into s_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="addressid != null" >
        addressid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="consignee != null" >
        consignee,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="addressphone != null" >
        addressphone,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="zip != null" >
        zip,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="dist != null" >
        dist,
      </if>
      <if test="detailed != null" >
        detailed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="addressid != null" >
        #{addressid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="consignee != null" >
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="addressphone != null" >
        #{addressphone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="zip != null" >
        #{zip,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="dist != null" >
        #{dist,jdbcType=VARCHAR},
      </if>
      <if test="detailed != null" >
        #{detailed,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update s_address
    <set >
      <if test="record.addressid != null" >
        addressid = #{record.addressid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.consignee != null" >
        consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.addressphone != null" >
        addressphone = #{record.addressphone,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.zip != null" >
        zip = #{record.zip,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.dist != null" >
        dist = #{record.dist,jdbcType=VARCHAR},
      </if>
      <if test="record.detailed != null" >
        detailed = #{record.detailed,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update s_address
    set addressid = #{record.addressid,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      consignee = #{record.consignee,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      addressphone = #{record.addressphone,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      zip = #{record.zip,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      dist = #{record.dist,jdbcType=VARCHAR},
      detailed = #{record.detailed,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shopping.entity.SAddress" >
    update s_address
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="consignee != null" >
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="addressphone != null" >
        addressphone = #{addressphone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="zip != null" >
        zip = #{zip,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="dist != null" >
        dist = #{dist,jdbcType=VARCHAR},
      </if>
      <if test="detailed != null" >
        detailed = #{detailed,jdbcType=VARCHAR},
      </if>
    </set>
    where addressid = #{addressid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shopping.entity.SAddress" >
    update s_address
    set userid = #{userid,jdbcType=INTEGER},
      consignee = #{consignee,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      addressphone = #{addressphone,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      zip = #{zip,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      dist = #{dist,jdbcType=VARCHAR},
      detailed = #{detailed,jdbcType=VARCHAR}
    where addressid = #{addressid,jdbcType=INTEGER}
  </update>
</mapper>
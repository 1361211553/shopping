<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shopping.dao.SUserMapper" >
  <resultMap id="BaseResultMap" type="com.shopping.entity.SUser" >
    <id column="userid" property="userid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="userpass" property="userpass" jdbcType="VARCHAR" />
    <result column="userrealname" property="userrealname" jdbcType="VARCHAR" />
    <result column="usersex" property="usersex" jdbcType="VARCHAR" />
    <result column="userbirthday" property="userbirthday" jdbcType="DATE" />
    <result column="useremail" property="useremail" jdbcType="VARCHAR" />
    <result column="userphone" property="userphone" jdbcType="VARCHAR" />
    <result column="userface" property="userface" jdbcType="VARCHAR" />
    <result column="userregdate" property="userregdate" jdbcType="TIMESTAMP" />
    <result column="landingtimes" property="landingtimes" jdbcType="INTEGER" />
    <result column="slock" property="slock" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userid, username, userpass, userrealname, usersex, userbirthday, useremail, userphone, 
    userface, userregdate, landingtimes, slock
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shopping.entity.SUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from s_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from s_user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from s_user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shopping.entity.SUser" >
    insert into s_user (userid, username, userpass, 
      userrealname, usersex, userbirthday, 
      useremail, userphone, userface, 
      userregdate, landingtimes, slock
      )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userpass,jdbcType=VARCHAR}, 
      #{userrealname,jdbcType=VARCHAR}, #{usersex,jdbcType=VARCHAR}, #{userbirthday,jdbcType=DATE}, 
      #{useremail,jdbcType=VARCHAR}, #{userphone,jdbcType=VARCHAR}, #{userface,jdbcType=VARCHAR}, 
      #{userregdate,jdbcType=TIMESTAMP}, #{landingtimes,jdbcType=INTEGER}, #{slock,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shopping.entity.SUser" >
    insert into s_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="userpass != null" >
        userpass,
      </if>
      <if test="userrealname != null" >
        userrealname,
      </if>
      <if test="usersex != null" >
        usersex,
      </if>
      <if test="userbirthday != null" >
        userbirthday,
      </if>
      <if test="useremail != null" >
        useremail,
      </if>
      <if test="userphone != null" >
        userphone,
      </if>
      <if test="userface != null" >
        userface,
      </if>
      <if test="userregdate != null" >
        userregdate,
      </if>
      <if test="landingtimes != null" >
        landingtimes,
      </if>
      <if test="slock != null" >
        slock,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpass != null" >
        #{userpass,jdbcType=VARCHAR},
      </if>
      <if test="userrealname != null" >
        #{userrealname,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null" >
        #{usersex,jdbcType=VARCHAR},
      </if>
      <if test="userbirthday != null" >
        #{userbirthday,jdbcType=DATE},
      </if>
      <if test="useremail != null" >
        #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null" >
        #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="userface != null" >
        #{userface,jdbcType=VARCHAR},
      </if>
      <if test="userregdate != null" >
        #{userregdate,jdbcType=TIMESTAMP},
      </if>
      <if test="landingtimes != null" >
        #{landingtimes,jdbcType=INTEGER},
      </if>
      <if test="slock != null" >
        #{slock,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update s_user
    <set >
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.userpass != null" >
        userpass = #{record.userpass,jdbcType=VARCHAR},
      </if>
      <if test="record.userrealname != null" >
        userrealname = #{record.userrealname,jdbcType=VARCHAR},
      </if>
      <if test="record.usersex != null" >
        usersex = #{record.usersex,jdbcType=VARCHAR},
      </if>
      <if test="record.userbirthday != null" >
        userbirthday = #{record.userbirthday,jdbcType=DATE},
      </if>
      <if test="record.useremail != null" >
        useremail = #{record.useremail,jdbcType=VARCHAR},
      </if>
      <if test="record.userphone != null" >
        userphone = #{record.userphone,jdbcType=VARCHAR},
      </if>
      <if test="record.userface != null" >
        userface = #{record.userface,jdbcType=VARCHAR},
      </if>
      <if test="record.userregdate != null" >
        userregdate = #{record.userregdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.landingtimes != null" >
        landingtimes = #{record.landingtimes,jdbcType=INTEGER},
      </if>
      <if test="record.slock != null" >
        slock = #{record.slock,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update s_user
    set userid = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      userpass = #{record.userpass,jdbcType=VARCHAR},
      userrealname = #{record.userrealname,jdbcType=VARCHAR},
      usersex = #{record.usersex,jdbcType=VARCHAR},
      userbirthday = #{record.userbirthday,jdbcType=DATE},
      useremail = #{record.useremail,jdbcType=VARCHAR},
      userphone = #{record.userphone,jdbcType=VARCHAR},
      userface = #{record.userface,jdbcType=VARCHAR},
      userregdate = #{record.userregdate,jdbcType=TIMESTAMP},
      landingtimes = #{record.landingtimes,jdbcType=INTEGER},
      slock = #{record.slock,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shopping.entity.SUser" >
    update s_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpass != null" >
        userpass = #{userpass,jdbcType=VARCHAR},
      </if>
      <if test="userrealname != null" >
        userrealname = #{userrealname,jdbcType=VARCHAR},
      </if>
      <if test="usersex != null" >
        usersex = #{usersex,jdbcType=VARCHAR},
      </if>
      <if test="userbirthday != null" >
        userbirthday = #{userbirthday,jdbcType=DATE},
      </if>
      <if test="useremail != null" >
        useremail = #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null" >
        userphone = #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="userface != null" >
        userface = #{userface,jdbcType=VARCHAR},
      </if>
      <if test="userregdate != null" >
        userregdate = #{userregdate,jdbcType=TIMESTAMP},
      </if>
      <if test="landingtimes != null" >
        landingtimes = #{landingtimes,jdbcType=INTEGER},
      </if>
      <if test="slock != null" >
        slock = #{slock,jdbcType=INTEGER},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shopping.entity.SUser" >
    update s_user
    set username = #{username,jdbcType=VARCHAR},
      userpass = #{userpass,jdbcType=VARCHAR},
      userrealname = #{userrealname,jdbcType=VARCHAR},
      usersex = #{usersex,jdbcType=VARCHAR},
      userbirthday = #{userbirthday,jdbcType=DATE},
      useremail = #{useremail,jdbcType=VARCHAR},
      userphone = #{userphone,jdbcType=VARCHAR},
      userface = #{userface,jdbcType=VARCHAR},
      userregdate = #{userregdate,jdbcType=TIMESTAMP},
      landingtimes = #{landingtimes,jdbcType=INTEGER},
      slock = #{slock,jdbcType=INTEGER}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
</mapper>
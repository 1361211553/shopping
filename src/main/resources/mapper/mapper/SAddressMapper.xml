<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shopping.dao.SAddressMapper" >
  <resultMap id="BaseResultMap" type="com.shopping.entity.SAddress" >
    <id column="addreessid" property="addreessid" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="consignee" property="consignee" jdbcType="VARCHAR" />
    <result column="addressname" property="addressname" jdbcType="VARCHAR" />
    <result column="addressphone" property="addressphone" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    addreessid, userid, consignee, addressname, addressphone, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shopping.entity.SAddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from s_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from s_address
    where addreessid = #{addreessid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from s_address
    where addreessid = #{addreessid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shopping.entity.SAddress" >
    insert into s_address (addreessid, userid, consignee, 
      addressname, addressphone, status
      )
    values (#{addreessid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{consignee,jdbcType=VARCHAR}, 
      #{addressname,jdbcType=VARCHAR}, #{addressphone,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shopping.entity.SAddress" >
    insert into s_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="addreessid != null" >
        addreessid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="consignee != null" >
        consignee,
      </if>
      <if test="addressname != null" >
        addressname,
      </if>
      <if test="addressphone != null" >
        addressphone,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="addreessid != null" >
        #{addreessid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="consignee != null" >
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="addressname != null" >
        #{addressname,jdbcType=VARCHAR},
      </if>
      <if test="addressphone != null" >
        #{addressphone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update s_address
    <set >
      <if test="record.addreessid != null" >
        addreessid = #{record.addreessid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.consignee != null" >
        consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.addressname != null" >
        addressname = #{record.addressname,jdbcType=VARCHAR},
      </if>
      <if test="record.addressphone != null" >
        addressphone = #{record.addressphone,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update s_address
    set addreessid = #{record.addreessid,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      consignee = #{record.consignee,jdbcType=VARCHAR},
      addressname = #{record.addressname,jdbcType=VARCHAR},
      addressphone = #{record.addressphone,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shopping.entity.SAddress" >
    update s_address
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="consignee != null" >
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="addressname != null" >
        addressname = #{addressname,jdbcType=VARCHAR},
      </if>
      <if test="addressphone != null" >
        addressphone = #{addressphone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where addreessid = #{addreessid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shopping.entity.SAddress" >
    update s_address
    set userid = #{userid,jdbcType=INTEGER},
      consignee = #{consignee,jdbcType=VARCHAR},
      addressname = #{addressname,jdbcType=VARCHAR},
      addressphone = #{addressphone,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where addreessid = #{addreessid,jdbcType=INTEGER}
  </update>
</mapper>